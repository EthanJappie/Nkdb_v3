//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nkdb_v3
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NkdbEntities : DbContext
    {
        public NkdbEntities()
            : base("name=NkdbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Tribe> Tribes { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int RegisterUser(string firstname, string middlename, string lastname, string iDNumber, string email, Nullable<int> tribeId, string password, Nullable<int> age, Nullable<long> aspUserId)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var middlenameParameter = middlename != null ?
                new ObjectParameter("Middlename", middlename) :
                new ObjectParameter("Middlename", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var iDNumberParameter = iDNumber != null ?
                new ObjectParameter("IDNumber", iDNumber) :
                new ObjectParameter("IDNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var tribeIdParameter = tribeId.HasValue ?
                new ObjectParameter("TribeId", tribeId) :
                new ObjectParameter("TribeId", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var aspUserIdParameter = aspUserId.HasValue ?
                new ObjectParameter("AspUserId", aspUserId) :
                new ObjectParameter("AspUserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegisterUser", firstnameParameter, middlenameParameter, lastnameParameter, iDNumberParameter, emailParameter, tribeIdParameter, passwordParameter, ageParameter, aspUserIdParameter);
        }
    
        public virtual ObjectResult<GetTribes_Result> GetTribes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTribes_Result>("GetTribes");
        }
    }
}
